plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.github.node-gradle.node' version '7.1.0'
}

node {
	version = '19.9.0'
	npmVersion = '9.6.3'
	download = true

	workDir = file("${project.projectDir}/.gradle/nodejs")
	npmWorkDir = file("${project.projectDir}/.gradle/npm")
	nodeProjectDir = file("${project.projectDir}/frontend")
}

group = 'aoop'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.hibernate:hibernate-core:5.6.10.Final'
	implementation 'org.springframework.boot:spring-boot-starter-security:2.7.10'
	implementation 'org.springframework.security:spring-security-crypto:5.7.8'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'com.microsoft.sqlserver:mssql-jdbc:7.0.0.jre8'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

task buildReact(type: NpmTask) {
	args = ['install']
}

task buildReactProduction(type: NpmTask) {
	dependsOn buildReact
	args = ['run', 'build']
}

task copyReactBuild(type: Copy) {
	dependsOn buildReactProduction
	from('frontend/build')
	into('src/main/resources/static')
}

tasks.named('bootRun') {
	dependsOn copyReactBuild
}

tasks.named('processResources') {
	dependsOn copyReactBuild
}